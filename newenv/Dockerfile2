# Use a recent, stable Ubuntu Long-Term Support (LTS) release as the base image.
FROM ubuntu:22.04

# Set the DEBIAN_FRONTEND environment variable to noninteractive.
# This prevents package managers like apt from prompting for user input during installation,
# which is essential for automated builds.
ENV DEBIAN_FRONTEND=noninteractive

# Chain all commands into a single RUN instruction to reduce the number of layers in the Docker image.
# This helps to keep the final image size smaller.
RUN \
    # 1. Set the timezone to prevent interactive tzdata prompts.
    # This is a common requirement in automated Docker builds.
    ln -snf /usr/share/zoneinfo/Etc/UTC /etc/localtime && echo "Etc/UTC" > /etc/timezone && \
    \
    # 2. Update package lists and install essential dependencies.
    # --no-install-recommends avoids installing optional packages, keeping the installation minimal.
    apt-get update -y && \
    apt-get install -y --no-install-recommends \
        software-properties-common \
        dirmngr \
        wget \
        ca-certificates && \
    \
    # 3. Add the CRAN (Comprehensive R Archive Network) signing key.
    # This key is necessary to authenticate the packages from the R repository.
    wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter-key.asc | tee /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc > /dev/null && \
    \
    # 4. Add the CRAN repository for Ubuntu.
    # Using the official CRAN repository ensures you get the latest version of R.
    # `lsb_release -cs` dynamically gets the codename of the Ubuntu version (e.g., "jammy").
    add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/" && \
    \
    # 5. Install R and its development packages.
    # r-base: The core R environment.
    # r-base-dev: Required for compiling R packages from source (a common task).
    apt-get install -y --no-install-recommends \
        r-base \
        r-base-dev && \
    \
    # 6. Clean up the package cache.
    # This removes downloaded package files (.deb) and lists, which are not needed
    # after installation, further reducing the image size.
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN Rscript -e "install.packages(c('bipartite', 'Rcpp', 'RInside'), repos = 'https://www.icesi.edu.co/CRAN/')"
# You can optionally set a default command, but for creating a base .sif file,
# it's often not necessary. If you did, it might look like this:
# CMD ["R"]